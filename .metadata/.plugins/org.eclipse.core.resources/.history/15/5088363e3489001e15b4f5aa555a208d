package entity;

import java.awt.Graphics2D;

public class Weapon implements Runnable{
	private AttackHitbox attack;
	private boolean attacking = false;
	private Thread attackTime;
	private int damage;
	
	public Weapon(String weapon_type) {
		attack = new AttackHitbox(weapon_type);
	}
	
	public Entity attack(int x, int y) {
		attack.setX(x);
		attack.setY(y);
		attackTime = new Thread(this);
		attackTime.start();
		return attack;
	}
	
	public void draw(Graphics2D grap2) {
		grap2.drawImage(attack.getSkin(), attack.getX(), attack.getY(), null);
	}
	
	public boolean isAttacking() {
		return attacking;
	}

	@Override
	public void run() {
		try {
			attacking = true;
			switch(attack.getWeaponType()) {
			case "ground_attack":
				Thread.sleep(500);
				attacking = false;
				break;
			case "eyeball_attack":
				Thread.sleep(2000);
				attacking = false;
				break;
			}
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void stopAttacking() {
		attacking = false;
	}
	
	public AttackHitbox getAttackHitbox() {
		return attack;
	}
	
	public int getWeaponDamage() {
		return damage;
	}
}
